package kevin.module.modules.exploit;

import io.netty.buffer.Unpooled;
import kevin.event.EventTarget;
import kevin.event.impl.PacketEvent;
import kevin.module.ClientModule;
import kevin.module.ListValue;
import kevin.module.ModuleCategory;
import kevin.utils.PacketUtils;
import net.minecraft.network.PacketBuffer;
import net.minecraft.network.play.client.C17PacketCustomPayload;
import org.jetbrains.annotations.NotNull;

public class ClientSpoof extends ClientModule {
    @NotNull
    public static final ClientSpoof INSTANCE = new ClientSpoof();
    @NotNull
    private static final ListValue mode = new ListValue("Mode", new String[]{"Lunar", "Forge", "LabyMod", "PVP-L", "C-B", "Geyser"}, "Lunar");

    private ClientSpoof() {
        super("ClientSpoof", "Let the server think you are using another client.", ModuleCategory.EXPLOIT);
    }

    @EventTarget
    public final void onPacket(@NotNull PacketEvent event) {
        if (event.getPacket() instanceof C17PacketCustomPayload) {
            C17PacketCustomPayload p = (C17PacketCustomPayload) event.getPacket();
            String channelName = p.getChannelName() == null?"": p.getChannelName();

            if (channelName != null && channelName.equalsIgnoreCase("mc|brand")) {
                String selectedMode = mode.get();
                // No enhanced switch statement in Java 8, so we use a traditional switch

                String brand = "";

                switch (selectedMode) {
                    case "C-B":
                        brand = "CB";
                        break;
                    case "Forge":
                        brand = "FML";
                        break;
                    case "Lunar":
                        brand = "Lunar-Client";
                        break;
                    case "PVP-L":
                        brand = "if (";
                        break;
                    case "LabyMod":
                        brand = "LMC";
                        break;
                    case "Geyser":
                        brand = "Geyser";
                        break;
                    default:
                        brand = null;
                        break;
                }


                if (brand != null) {
                    C17PacketCustomPayload packet = selectedMode.equals("Lunar") ?
                            new C17PacketCustomPayload("REGISTER", new PacketBuffer(Unpooled.buffer()).writeString(brand)) :
                            new C17PacketCustomPayload("MC|Brand", new PacketBuffer(Unpooled.buffer()).writeString(brand));

                    event.cancelEvent();
                    PacketUtils.sendPacketNoEvent(packet);
                }
            }
        }
    }

    @NotNull
    public String getTag() {
        return mode.get();
    }
}